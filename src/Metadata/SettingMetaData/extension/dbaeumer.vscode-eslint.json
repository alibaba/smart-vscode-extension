[
    {
        "name": "eslint.enable",
        "desc": "Controls whether eslint is enabled or not.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "eslint.packageManager",
        "desc": "The package manager you use to install node modules.",
        "default": "npm",
        "type": "string"
    },
    {
        "name": "eslint.problems.shortenToSingleLine",
        "desc": "Shortens the text spans of underlined problems to their first related line.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "eslint.nodeEnv",
        "default": null,
        "type": [
            "string",
            "null"
        ]
    },
    {
        "name": "eslint.nodePath",
        "default": null,
        "type": [
            "string",
            "null"
        ]
    },
    {
        "name": "eslint.options",
        "default": {},
        "type": "object"
    },
    {
        "name": "eslint.trace.server",
        "desc": "Traces the communication between VSCode and the eslint linter service.",
        "default": "off"
    },
    {
        "name": "eslint.run",
        "desc": "Run the linter on save (onSave) or on type (onType)",
        "default": "onType",
        "type": "string"
    },
    {
        "name": "eslint.autoFixOnSave",
        "desc": "Turns auto fix on save on or off.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "eslint.quiet",
        "desc": "Turns on quiet mode, which ignores warnings.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "eslint.onIgnoredFiles",
        "desc": "Whether ESLint should issue a warning on ignored files.",
        "default": "off",
        "type": "string"
    },
    {
        "name": "eslint.migration.2_x",
        "desc": "Whether ESlint should migrate auto fix on save settings.",
        "default": "on",
        "type": "string"
    },
    {
        "name": "eslint.useESLintClass",
        "desc": "Since version 7 ESLint offers a new API call ESLint. Use it even if the old CLIEngine is available. From version 8 on forward on ESLint class is available.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "eslint.experimental.useFlatConfig",
        "desc": "Enables support of experimental Flat Config (aka eslint.config.js, supported by ESLint version 8.21 or later).",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "eslint.workingDirectories",
        "type": "array"
    },
    {
        "name": "eslint.validate",
        "desc": "An array of language ids which should be validated by ESLint. If not installed ESLint will show an error.",
        "type": "array"
    },
    {
        "name": "eslint.ignoreUntitled",
        "desc": "If true, untitled files won't be validated by ESLint.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "eslint.probe",
        "desc": "An array of language ids for which the extension should probe if support is installed.",
        "default": [
            "javascript",
            "javascriptreact",
            "typescript",
            "typescriptreact",
            "html",
            "vue",
            "markdown"
        ],
        "type": "array"
    },
    {
        "name": "eslint.provideLintTask",
        "desc": "Controls whether a task for linting the whole workspace will be available.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "eslint.lintTask.enable",
        "desc": "Controls whether a task for linting the whole workspace will be available.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "eslint.lintTask.options",
        "default": ".",
        "type": "string"
    },
    {
        "name": "eslint.runtime",
        "default": null,
        "type": [
            "string",
            "null"
        ]
    },
    {
        "name": "eslint.execArgv",
        "default": null
    },
    {
        "name": "eslint.debug",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "eslint.codeAction.disableRuleComment",
        "default": {
            "enable": true,
            "location": "separateLine",
            "commentStyle": "line"
        },
        "type": "object"
    },
    {
        "name": "eslint.codeAction.showDocumentation",
        "default": {
            "enable": true
        },
        "type": "object"
    },
    {
        "name": "eslint.codeActionsOnSave.mode",
        "default": "all",
        "type": "string"
    },
    {
        "name": "eslint.codeActionsOnSave.rules",
        "default": null
    },
    {
        "name": "eslint.format.enable",
        "desc": "Enables ESLint as a formatter.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "eslint.rules.customizations",
        "desc": "Override the severity of one or more rules reported by this extension, regardless of the project's ESLint config. Use globs to apply default severities for multiple rules.",
        "type": "array"
    },
    {
        "name": "eslint.notebooks.rules.customizations",
        "desc": "A special rules customization section for text cells in notebook documents.",
        "type": "array"
    },
    {
        "name": "eslint.timeBudget.onValidation",
        "default": {
            "warn": 4000,
            "error": 8000
        },
        "type": "object"
    },
    {
        "name": "eslint.timeBudget.onFixes",
        "default": {
            "warn": 3000,
            "error": 6000
        },
        "type": "object"
    }
]