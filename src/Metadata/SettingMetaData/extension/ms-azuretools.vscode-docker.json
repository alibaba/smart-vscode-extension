[
    {
        "name": "docker.promptForRegistryWhenPushingImages",
        "desc": "Prompt for registry selection if the image is not explicitly tagged.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "docker.commands.build",
        "desc": "Command template(s) for `docker build` commands.",
        "default": "${containerCommand} build --pull --rm -f \"${dockerfile}\" -t ${tag} \"${context}\""
    },
    {
        "name": "docker.commands.run",
        "desc": "Command templates for `docker run` commands.",
        "default": "${containerCommand} run --rm -d ${exposedPorts} ${tag}"
    },
    {
        "name": "docker.commands.runInteractive",
        "desc": "Command templates for `docker run -it` (interactive) commands.",
        "default": "${containerCommand} run --rm -it ${exposedPorts} ${tag}"
    },
    {
        "name": "docker.commands.attach",
        "desc": "Command templates for `docker attach` / `docker exec -it` commands.",
        "default": "${containerCommand} exec -it ${containerId} ${shellCommand}"
    },
    {
        "name": "docker.commands.logs",
        "desc": "Command templates for `docker logs` commands.",
        "default": "${containerCommand} logs --tail 1000 -f ${containerId}"
    },
    {
        "name": "docker.commands.composeUp",
        "desc": "Command templates for `docker-compose up` commands.",
        "default": [
            {
                "label": "Compose Up",
                "template": "${composeCommand} ${configurationFile} up ${detached} ${build}"
            }
        ]
    },
    {
        "name": "docker.commands.composeUpSubset",
        "desc": "Command templates for `docker-compose up <subset>` commands.",
        "default": [
            {
                "label": "Compose Up",
                "template": "${composeCommand} ${profileList} ${configurationFile} up ${detached} ${build} ${serviceList}"
            }
        ]
    },
    {
        "name": "docker.commands.composeDown",
        "desc": "Command templates for `docker-compose down` commands.",
        "default": [
            {
                "label": "Compose Down",
                "template": "${composeCommand} ${configurationFile} down"
            }
        ]
    },
    {
        "name": "docker.containers.groupBy",
        "desc": "The property to use to group containers in Docker view: ContainerId, ContainerName, CreatedTime, FullTag, ImageId, Networks, Ports, Registry, Repository, RepositoryName, RepositoryNameAndTag, State, Status, Tag, or None",
        "default": "Compose Project Name",
        "type": "string"
    },
    {
        "name": "docker.containers.groupByLabel",
        "desc": "The items will be grouped by the value of this container label (e.g. `com.microsoft.created-by`)",
        "type": "string"
    },
    {
        "name": "docker.containers.description",
        "desc": "Any secondary properties to display for a container (an array). Possible elements include: ContainerId, ContainerName, CreatedTime, FullTag, ImageId, Networks, Ports, Registry, Repository, RepositoryName, RepositoryNameAndTag, State, Status, and Tag",
        "default": [
            "ContainerName",
            "Status"
        ],
        "type": "array"
    },
    {
        "name": "docker.containers.label",
        "desc": "The primary property to display for a container: ContainerId, ContainerName, CreatedTime, FullTag, ImageId, Networks, Ports, Registry, Repository, RepositoryName, RepositoryNameAndTag, State, Status, or Tag",
        "default": "FullTag",
        "type": "string"
    },
    {
        "name": "docker.containers.sortBy",
        "desc": "The property to use to sort containers in Docker view: CreatedTime or Label",
        "default": "CreatedTime",
        "type": "string"
    },
    {
        "name": "docker.contexts.description",
        "desc": "Any secondary properties to display for a Docker context (an array). Possible elements include: Name, Description and DockerEndpoint",
        "default": [
            "Description"
        ],
        "type": "array"
    },
    {
        "name": "docker.contexts.label",
        "desc": "The primary property to display for a Docker context: Name, Description or DockerEndpoint",
        "default": "Name",
        "type": "string"
    },
    {
        "name": "docker.contexts.showInStatusBar",
        "desc": "Show current Docker context in the status bar",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "docker.images.groupBy",
        "desc": "The property to use to group images in Docker view: CreatedTime, FullTag, ImageId, None, Registry, Repository, RepositoryName, RepositoryNameAndTag, or Tag",
        "default": "Repository",
        "type": "string"
    },
    {
        "name": "docker.images.description",
        "desc": "Any secondary properties to display for a image (an array). Possible elements include: CreatedTime, FullTag, ImageId, Registry, Repository, RepositoryName, RepositoryNameAndTag, Tag, and Size",
        "default": [
            "CreatedTime"
        ],
        "type": "array"
    },
    {
        "name": "docker.images.label",
        "desc": "The primary property to display for a image: CreatedTime, FullTag, ImageId, Registry, Repository, RepositoryName, RepositoryNameAndTag, Tag, or Size",
        "default": "Tag",
        "type": "string"
    },
    {
        "name": "docker.images.sortBy",
        "desc": "The property to use to sort images in Docker view: CreatedTime, Label, or Size",
        "default": "CreatedTime",
        "type": "string"
    },
    {
        "name": "docker.images.checkForOutdatedImages",
        "desc": "Check for outdated base images once per Visual Studio Code session",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "docker.networks.groupBy",
        "desc": "The property to use to group networks in Docker view: CreatedTime, NetworkDriver, NetworkId, NetworkName, or None",
        "default": "None",
        "type": "string"
    },
    {
        "name": "docker.networks.description",
        "desc": "Any secondary properties to display for a Docker network (an array). Possible elements include CreatedTime, NetworkDriver, NetworkId, and NetworkName",
        "default": [
            "NetworkDriver",
            "CreatedTime"
        ],
        "type": "array"
    },
    {
        "name": "docker.networks.showBuiltInNetworks",
        "desc": "Show the built-in networks in the explorer.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "docker.networks.label",
        "desc": "The primary property to display for a Docker network: CreatedTime, NetworkDriver, NetworkId, or NetworkName",
        "default": "NetworkName",
        "type": "string"
    },
    {
        "name": "docker.networks.sortBy",
        "desc": "The property to use to sort networks in Docker view: CreatedTime or Label",
        "default": "CreatedTime",
        "type": "string"
    },
    {
        "name": "docker.volumes.groupBy",
        "desc": "The property to use to group volumes in Docker view: CreatedTime, VolumeName, or None",
        "default": "None",
        "type": "string"
    },
    {
        "name": "docker.volumes.description",
        "desc": "Any secondary properties to display for a Docker volume (an array). Possible values include CreatedTime and VolumeName",
        "default": [
            "CreatedTime"
        ],
        "type": "array"
    },
    {
        "name": "docker.volumes.label",
        "desc": "The primary property to display for a Docker volume: CreatedTime or VolumeName",
        "default": "VolumeName",
        "type": "string"
    },
    {
        "name": "docker.volumes.sortBy",
        "desc": "The property to use to sort volumes in Docker view: CreatedTime or Label",
        "default": "CreatedTime",
        "type": "string"
    },
    {
        "name": "docker.imageBuildContextPath",
        "desc": "Build context PATH to pass to Docker build command.",
        "default": "",
        "type": "string"
    },
    {
        "name": "docker.truncateLongRegistryPaths",
        "desc": "Set to true to truncate long image and container registry paths in Docker view",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "docker.truncateMaxLength",
        "desc": "Maximum length of a registry paths displayed in Docker view, including ellipsis. The truncateLongRegistryPaths setting must be set to true for truncateMaxLength setting to be effective.",
        "default": 10,
        "type": "number"
    },
    {
        "name": "docker.environment",
        "desc": "Environment variables that will be applied to all VS Code terminals and to all background processes started by the Docker extension. Use for variables like `DOCKER_HOST`, etc.",
        "type": "object"
    },
    {
        "name": "docker.languageserver.diagnostics.deprecatedMaintainer",
        "desc": "Controls the diagnostic severity for the deprecated MAINTAINER instruction",
        "default": "warning",
        "type": "string"
    },
    {
        "name": "docker.languageserver.diagnostics.emptyContinuationLine",
        "desc": "Controls the diagnostic severity for flagging empty continuation lines found in instructions that span multiple lines",
        "default": "warning",
        "type": "string"
    },
    {
        "name": "docker.languageserver.diagnostics.directiveCasing",
        "desc": "Controls the diagnostic severity for parser directives that are not written in lowercase",
        "default": "warning",
        "type": "string"
    },
    {
        "name": "docker.languageserver.diagnostics.instructionCasing",
        "desc": "Controls the diagnostic severity for instructions that are not written in uppercase",
        "default": "warning",
        "type": "string"
    },
    {
        "name": "docker.languageserver.diagnostics.instructionCmdMultiple",
        "desc": "Controls the diagnostic severity for flagging a Dockerfile with multiple CMD instructions",
        "default": "warning",
        "type": "string"
    },
    {
        "name": "docker.languageserver.diagnostics.instructionEntrypointMultiple",
        "desc": "Controls the diagnostic severity for flagging a Dockerfile with multiple ENTRYPOINT instructions",
        "default": "warning",
        "type": "string"
    },
    {
        "name": "docker.languageserver.diagnostics.instructionHealthcheckMultiple",
        "desc": "Controls the diagnostic severity for flagging a Dockerfile with multiple HEALTHCHECK instructions",
        "default": "warning",
        "type": "string"
    },
    {
        "name": "docker.languageserver.diagnostics.instructionJSONInSingleQuotes",
        "desc": "Controls the diagnostic severity for JSON instructions that are written incorrectly with single quotes",
        "default": "warning",
        "type": "string"
    },
    {
        "name": "docker.languageserver.diagnostics.instructionWorkdirRelative",
        "desc": "Controls the diagnostic severity for WORKDIR instructions that do not point to an absolute path",
        "default": "warning",
        "type": "string"
    },
    {
        "name": "docker.languageserver.formatter.ignoreMultilineInstructions",
        "desc": "Controls whether the Dockerfile formatter should ignore instructions that span multiple lines when formatting",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "docker.dockerComposeBuild",
        "desc": "Set to true to include --build option when docker-compose command is invoked",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "docker.dockerComposeDetached",
        "desc": "Set to true to include --d (detached) option when docker-compose command is invoked",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "docker.showRemoteWorkspaceWarning",
        "desc": "Set to true to prompt to switch from \"UI\" extension mode to \"Workspace\" extension mode if an operation is not supported in UI mode.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "docker.scaffolding.templatePath",
        "desc": "The path to use for scaffolding templates.",
        "type": "string"
    },
    {
        "name": "docker.dockerPath",
        "desc": "Absolute path to Docker client executable (`docker` command). If the path contains whitespace, it needs to be quoted appropriately.",
        "type": "string"
    },
    {
        "name": "docker.composeCommand",
        "desc": "Command to use for Docker Compose actions (e.g. `docker-compose`, `docker compose`, etc.). If the executable path contains whitespace, it needs to be quoted appropriately. If unset, the extension will attempt to auto-detect the command to use.",
        "type": "string"
    },
    {
        "name": "docker.enableDockerComposeLanguageService",
        "desc": "Whether or not to enable the preview Docker Compose Language Service. Changing requires restart to take effect.",
        "default": true,
        "type": "boolean"
    }
]