[
    {
        "name": "python.activeStateToolPath",
        "desc": "Path to the State Tool executable for ActiveState runtimes (version 0.36+).",
        "default": "state",
        "type": "string"
    },
    {
        "name": "python.autoComplete.extraPaths",
        "desc": "List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.",
        "default": [],
        "type": "array"
    },
    {
        "name": "python.createEnvironment.contentButton",
        "default": "hide",
        "type": "string"
    },
    {
        "name": "python.createEnvironment.trigger",
        "default": "prompt",
        "type": "string"
    },
    {
        "name": "python.condaPath",
        "desc": "Path to the conda executable to use for activation (version 4.4+).",
        "default": "",
        "type": "string"
    },
    {
        "name": "python.defaultInterpreterPath",
        "default": "python",
        "type": "string"
    },
    {
        "name": "python.diagnostics.sourceMapsEnabled",
        "desc": "Enable source map support for meaningful stack traces in error logs.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "python.envFile",
        "desc": "Absolute path to a file containing environment variable definitions.",
        "default": "${workspaceFolder}/.env",
        "type": "string"
    },
    {
        "name": "python.experiments.enabled",
        "desc": "Enables A/B tests experiments in the Python extension. If enabled, you may get included in proposed enhancements and/or features.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "python.experiments.optInto",
        "default": [],
        "type": "array"
    },
    {
        "name": "python.experiments.optOutFrom",
        "default": [],
        "type": "array"
    },
    {
        "name": "python.globalModuleInstallation",
        "desc": "Whether to install Python modules globally when not using an environment.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "python.languageServer",
        "desc": "Defines type of the language server.",
        "default": "Default",
        "type": "string"
    },
    {
        "name": "python.interpreter.infoVisibility",
        "desc": "Controls when to display information of selected interpreter in the status bar.",
        "default": "onPythonRelated",
        "type": "string"
    },
    {
        "name": "python.logging.level",
        "desc": "The logging level the extension logs at, defaults to 'error'",
        "default": "error",
        "type": "string"
    },
    {
        "name": "python.missingPackage.severity",
        "desc": "Set severity of missing packages in requirements.txt or pyproject.toml",
        "default": "Hint",
        "type": "string"
    },
    {
        "name": "python.pipenvPath",
        "desc": "Path to the pipenv executable to use for activation.",
        "default": "pipenv",
        "type": "string"
    },
    {
        "name": "python.poetryPath",
        "desc": "Path to the poetry executable.",
        "default": "poetry",
        "type": "string"
    },
    {
        "name": "python.tensorBoard.logDirectory",
        "desc": "Set this setting to your preferred TensorBoard log directory to skip log directory prompt when starting TensorBoard.",
        "default": "",
        "type": "string"
    },
    {
        "name": "python.terminal.activateEnvInCurrentTerminal",
        "desc": "Activate Python Environment in the current Terminal on load of the Extension.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "python.terminal.activateEnvironment",
        "desc": "Activate Python Environment in all Terminals created.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "python.terminal.executeInFileDir",
        "desc": "When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "python.terminal.focusAfterLaunch",
        "desc": "When launching a python terminal, whether to focus the cursor on the terminal.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "python.terminal.launchArgs",
        "desc": "Python launch arguments to use when executing a file in the terminal.",
        "default": [],
        "type": "array"
    },
    {
        "name": "python.REPL.enableREPLSmartSend",
        "desc": "Toggle Smart Send for the Python REPL. Smart Send enables sending the smallest runnable block of code to the REPL on Shift+Enter and moves the cursor accordingly.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "python.testing.autoTestDiscoverOnSaveEnabled",
        "desc": "Enable auto run test discovery when saving a test file.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "python.testing.cwd",
        "desc": "Optional working directory for tests.",
        "default": null,
        "type": "string"
    },
    {
        "name": "python.testing.debugPort",
        "desc": "Port number used for debugging of tests.",
        "default": 3000,
        "type": "number"
    },
    {
        "name": "python.testing.promptToConfigure",
        "desc": "Prompt to configure a test framework if potential tests directories are discovered.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "python.testing.pytestArgs",
        "desc": "Arguments passed in. Each argument is a separate item in the array.",
        "default": [],
        "type": "array"
    },
    {
        "name": "python.testing.pytestEnabled",
        "desc": "Enable testing using pytest.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "python.testing.pytestPath",
        "desc": "Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.",
        "default": "pytest",
        "type": "string"
    },
    {
        "name": "python.testing.unittestArgs",
        "desc": "Arguments passed in. Each argument is a separate item in the array.",
        "default": [
            "-v",
            "-s",
            ".",
            "-p",
            "*test*.py"
        ],
        "type": "array"
    },
    {
        "name": "python.testing.unittestEnabled",
        "desc": "Enable testing using unittest.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "python.venvFolders",
        "desc": "Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).",
        "default": [],
        "type": "array"
    },
    {
        "name": "python.venvPath",
        "desc": "Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).",
        "default": "",
        "type": "string"
    }
]