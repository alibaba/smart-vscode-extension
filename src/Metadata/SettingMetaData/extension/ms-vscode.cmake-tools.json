[
    {
        "name": "cmake.autoSelectActiveFolder",
        "desc": "Select active folder automatically.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "cmake.cmakePath",
        "desc": "Name/path of the CMake executable to use.",
        "default": "cmake",
        "type": "string"
    },
    {
        "name": "cmake.buildDirectory",
        "desc": "The directory where CMake build files will go.",
        "default": "${workspaceFolder}/build",
        "type": "string"
    },
    {
        "name": "cmake.installPrefix",
        "desc": "The directory where CMake installed files will go.",
        "default": null,
        "type": "string"
    },
    {
        "name": "cmake.sourceDirectory",
        "desc": "Path or array of paths to the CMakeLists.txt root directory/directories.",
        "default": "${workspaceFolder}"
    },
    {
        "name": "cmake.saveBeforeBuild",
        "desc": "Save open files before building.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "cmake.buildBeforeRun",
        "desc": "Build the target before running it.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "cmake.clearOutputBeforeBuild",
        "desc": "Clear build output before each build.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "cmake.configureSettings",
        "desc": "CMake variables to set on the command line. This setting is specific to kits and will not be used for CMake Presets.",
        "default": {},
        "type": "object"
    },
    {
        "name": "cmake.cacheInit",
        "desc": "Provide cache-initializing CMake file(s)."
    },
    {
        "name": "cmake.preferredGenerators",
        "desc": "The preferred CMake generator(s) to use when configuring (tried in order of listing).",
        "default": [],
        "type": "array"
    },
    {
        "name": "cmake.generator",
        "desc": "The CMake generator to use.",
        "default": null,
        "type": "string"
    },
    {
        "name": "cmake.toolset",
        "desc": "The CMake toolset to use when configuring.",
        "default": null,
        "type": "string"
    },
    {
        "name": "cmake.platform",
        "desc": "The CMake platform to use when configuring.",
        "default": null,
        "type": "string"
    },
    {
        "name": "cmake.configureArgs",
        "desc": "Additional arguments to pass to CMake when configuring. When using CMake Presets, these arguments are temporarily appended to the arguments provided by the active configure preset.",
        "default": [],
        "type": "array"
    },
    {
        "name": "cmake.buildArgs",
        "desc": "Additional arguments to pass to CMake when building. When using CMake Presets, these arguments are temporarily appended to the arguments provided by the active build preset.",
        "default": [],
        "type": "array"
    },
    {
        "name": "cmake.buildToolArgs",
        "desc": "Additional arguments to pass to the underlying build tool when building. When using CMake Presets, these arguments are temporarily appended to the arguments provided by the active build preset to invoke the build tool.",
        "default": [],
        "type": "array"
    },
    {
        "name": "cmake.parallelJobs",
        "desc": "The number of parallel build jobs. Use zero to automatically detect the number of CPUs. Setting this to 1 will omit the parallelism flag (-j) from the underlying build command, which has a generator-dependent effect on build parallelism.",
        "default": 0,
        "type": "number"
    },
    {
        "name": "cmake.ctestPath",
        "desc": "Path to CTest executable. If null, will be inferred from cmake.cmakePath (recommended to leave null).",
        "default": null,
        "type": "string"
    },
    {
        "name": "cmake.cpackPath",
        "desc": "Path to CPack executable. If null, will be inferred from cmake.cmakePath (recommended to leave null). Will be ignored when kits are used instead of presets.",
        "default": null,
        "type": "string"
    },
    {
        "name": "cmake.ctest.parallelJobs",
        "default": 0,
        "type": "number"
    },
    {
        "name": "cmake.ctest.allowParallelJobs",
        "desc": "Allows ctests to be run in parallel, however the result output may be garbled as a result.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "cmake.ctest.testExplorerIntegrationEnabled",
        "desc": "Whether or not the integration with the test explorer is enabled. This is helpful to disable if you prefer using a different extension for test integration.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "cmake.parseBuildDiagnostics",
        "desc": "Parse compiler output for warnings and errors.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "cmake.enabledOutputParsers",
        "default": [
            "cmake",
            "gcc",
            "gnuld",
            "msvc",
            "ghs",
            "diab"
        ],
        "type": "array"
    },
    {
        "name": "cmake.debugConfig",
        "desc": "The debug configuration to use when debugging a target.",
        "type": "object"
    },
    {
        "name": "cmake.defaultVariants",
        "desc": "Configure the default variant settings.",
        "default": {
            "buildType": {
                "default": "debug",
                "description": "The build type.",
                "choices": {
                    "debug": {
                        "short": "Debug",
                        "long": "Disable optimizations - include debug information.",
                        "buildType": "Debug"
                    },
                    "release": {
                        "short": "Release",
                        "long": "Optimize for speed - exclude debug information.",
                        "buildType": "Release"
                    },
                    "minsize": {
                        "short": "MinSizeRel",
                        "long": "Optimize for smallest binary size - exclude debug information.",
                        "buildType": "MinSizeRel"
                    },
                    "reldeb": {
                        "short": "RelWithDebInfo",
                        "long": "Optimize for speed - include debug information.",
                        "buildType": "RelWithDebInfo"
                    }
                }
            }
        },
        "type": "object"
    },
    {
        "name": "cmake.ctestArgs",
        "desc": "Additional arguments to pass to CTest. When using CMake Presets, these arguments are temporarily added to the arguments provided by the active test preset.",
        "default": [],
        "type": "array"
    },
    {
        "name": "cmake.ctestDefaultArgs",
        "desc": "Arguments passed by default to CTest.",
        "default": [
            "-T",
            "test",
            "--output-on-failure"
        ],
        "type": "array"
    },
    {
        "name": "cmake.cpackArgs",
        "desc": "Additional arguments to pass to CPack (only when using presets, not supported for kits). These arguments are temporarily added to the arguments provided by the active package preset.",
        "default": [],
        "type": "array"
    },
    {
        "name": "cmake.environment",
        "desc": "Environment variables to set when running CMake commands. When using CMake Presets, these are temporarily added to the environment used for CMake commands.",
        "default": {},
        "type": "object"
    },
    {
        "name": "cmake.configureEnvironment",
        "desc": "Environment variables to pass to CMake during configure. When using CMake Presets, these are temporarily added to the environment provided by the active configure preset.",
        "default": {},
        "type": "object"
    },
    {
        "name": "cmake.buildEnvironment",
        "desc": "Environment variables to pass to CMake during build. When using CMake Presets, these are temporarily added to the environment provided by the active build preset.",
        "default": {},
        "type": "object"
    },
    {
        "name": "cmake.testEnvironment",
        "desc": "Environment variables to pass to CTest. When using CMake Presets, these are temporarily added to the environment provided by the active test preset.",
        "default": {},
        "type": "object"
    },
    {
        "name": "cmake.cpackEnvironment",
        "desc": "Environment variables to set when packaging with CPack (only when using presets, not supported for kits). These are temporarily added to the environment used for CPack runs.",
        "default": {},
        "type": "object"
    },
    {
        "name": "cmake.mingwSearchDirs",
        "desc": "Directories where MinGW may be installed.",
        "default": [],
        "type": "array"
    },
    {
        "name": "cmake.additionalCompilerSearchDirs",
        "desc": "Additional directories to search for compilers.",
        "default": [],
        "type": "array"
    },
    {
        "name": "cmake.emscriptenSearchDirs",
        "desc": "Directories where Emscripten may be installed.",
        "default": [],
        "type": "array"
    },
    {
        "name": "cmake.mergedCompileCommands",
        "desc": "Recursively collect and merge all compile_commands.json found in the cmake.buildDirectory.",
        "default": null,
        "type": "string"
    },
    {
        "name": "cmake.copyCompileCommands",
        "desc": "Copy compile_commands.json to this location after a successful configure.",
        "default": null,
        "type": "string"
    },
    {
        "name": "cmake.configureOnOpen",
        "desc": "Automatically configure CMake project directories when they are opened.",
        "default": null,
        "type": "boolean"
    },
    {
        "name": "cmake.configureOnEdit",
        "desc": "Automatically configure CMake project directories when cmake.sourceDirectory or CMakeLists.txt content are saved.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "cmake.setBuildTypeOnMultiConfig",
        "desc": "Set CMAKE_BUILD_TYPE also on multi config generators.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "cmake.skipConfigureIfCachePresent",
        "desc": "Skip over the configure process if cache is present.",
        "default": null,
        "type": "boolean"
    },
    {
        "name": "cmake.cmakeCommunicationMode",
        "desc": "The protocol used to communicate between the extension and CMake.",
        "default": "automatic",
        "type": "string"
    },
    {
        "name": "cmake.showSystemKits",
        "desc": "Include system kits in kit selection.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "cmake.ignoreKitEnv",
        "desc": "Do not use the kit environment variables when running CMake commands.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "cmake.buildTask",
        "desc": "Build using tasks.json instead of internal process.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "cmake.outputLogEncoding",
        "desc": "Encoding of the output from external commands (eg.cmake -- build).",
        "default": "auto",
        "type": "string"
    },
    {
        "name": "cmake.enableTraceLogging",
        "desc": "Enable trace logging to file and console (very noisy).",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "cmake.loggingLevel",
        "desc": "Tell what types of messages should be logged to the console.",
        "default": "info",
        "type": "string"
    },
    {
        "name": "cmake.touchbar.visibility",
        "desc": "Configures how the extension displays the buttons on a MacBook Touch Bar.",
        "default": "default",
        "type": "string"
    },
    {
        "name": "cmake.touchbar.advanced",
        "desc": "Configures advanced settings for how the extension displays buttons on a MacBook Touch Bar.",
        "type": "object"
    },
    {
        "name": "cmake.showOptionsMovedNotification",
        "desc": "Enables the notification regarding the status bar options moving to the Project Status View to show when the extension starts.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "cmake.showConfigureWithDebuggerNotification",
        "desc": "Enables the pop-up that asks the user if, upon a failed configure, they want to configure with the CMake Debugger.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "cmake.showNotAllDocumentsSavedQuestion",
        "desc": "Enables the pop-up that asks the user if they want to continue the build despite some files possibly not being saved. If not enabled, the build will be continued.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "cmake.options.statusBarVisibility",
        "default": "hidden",
        "type": "string"
    },
    {
        "name": "cmake.options.advanced",
        "default": {
            "build": {
                "statusBarVisibility": "inherit",
                "inheritDefault": "visible"
            },
            "launch": {
                "statusBarVisibility": "inherit",
                "inheritDefault": "visible"
            },
            "debug": {
                "statusBarVisibility": "inherit",
                "inheritDefault": "visible"
            }
        },
        "type": "object"
    },
    {
        "name": "cmake.additionalKits",
        "desc": "Array of paths to custom kit files.",
        "default": [],
        "type": "array"
    },
    {
        "name": "cmake.revealLog",
        "desc": "Configures the settings for showing the log and focusing on the output channel.",
        "default": "always",
        "type": "string"
    },
    {
        "name": "cmake.exportCompileCommandsFile",
        "desc": "Enables exporting compile_commands.json.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "cmake.useCMakePresets",
        "desc": "Use CMakePresets.json to configure drive CMake configure, build, and test. When using CMakePresets.json, kits, variants, and some settings in settings.json will be ignored.",
        "default": "auto",
        "type": "string"
    },
    {
        "name": "cmake.allowCommentsInPresetsFile",
        "desc": "Allow the use of JSON extensions such as comments in CMakePresets.json. Please note that your CMakePresets.json file may be considered invalid by other IDEs or on the command line if you use non-standard JSON.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "cmake.allowUnsupportedPresetsVersions",
        "desc": "Enables the use of presets files that are using features from the versions that CMake Tools extension doesn't currently support. Unknown properties and macros will be ignored.",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "cmake.launchBehavior",
        "desc": "Controls what happens with the launch terminal when you launch a target.",
        "default": "reuseTerminal",
        "type": "string"
    },
    {
        "name": "cmake.ignoreCMakeListsMissing",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "cmake.loadCompileCommands",
        "desc": "Controls whether the extension reads compile_commands.json to enable single file compilation.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "cmake.automaticReconfigure",
        "desc": "Automatically configure CMake project directories when the kit or the configuration preset is changed.",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "cmake.pinnedCommands",
        "desc": "List of CMake commands to pin.",
        "default": [],
        "type": "array"
    }
]