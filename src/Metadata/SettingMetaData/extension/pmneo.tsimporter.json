[
    {
        "name": "tsimporter.filesToScan",
        "desc": "Glob for files to watch and scan, e.g ./src/** ./src/app/**/*.ts. Defaults to [**/*.ts,**/*.tsx]",
        "default": [
            "**/*.ts",
            "**/*.tsx",
            "**/*.vue"
        ],
        "type": "array"
    },
    {
        "name": "tsimporter.filesToExclude",
        "desc": "Glob for files to exclude from watch and scan, e.g ./out/**. Defaults to nothing",
        "default": [],
        "type": "array"
    },
    {
        "name": "tsimporter.disabled",
        "desc": "Extension is disabled when set to true",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "tsimporter.showNotifications",
        "desc": "Disables the extension",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "tsimporter.noStatusBar",
        "desc": "Disables the status bar of this extension",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "tsimporter.doubleQuotes",
        "desc": "Specifies wether to use double quotes",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "tsimporter.spaceBetweenBraces",
        "desc": "Insert spaces between the import braces. ( import {test} from 'test' vs. import { test } from 'test' )",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "tsimporter.removeFileExtensions",
        "desc": "File Extensions to remove. default is '.d.ts,.ts,.tsx'",
        "default": ".d.ts,.ts,.tsx",
        "type": "string"
    },
    {
        "name": "tsimporter.lowImportance",
        "desc": "If true, the code completion items will be sorted back to the build in completion items",
        "default": false,
        "type": "boolean"
    },
    {
        "name": "tsimporter.emitSemicolon",
        "desc": "If false, no semicolon will be written",
        "default": true,
        "type": "boolean"
    },
    {
        "name": "tsimporter.tsconfigName",
        "desc": "tsconfig name to search for",
        "default": "tsconfig.json",
        "type": "string"
    },
    {
        "name": "tsimporter.preferRelative",
        "desc": "When true shorter relative imports will be be prefered instead of absolute imports",
        "default": false,
        "type": "boolean"
    }
]