[
    {
        "settingId": "notebook.backup.sizeLimit",
        "desc": " The limit of notebook output size in kilobytes (KB) where notebook files will no longer be backed up for hot reload. Use 0 for unlimited.",
        "setting": {
            "notebook.backup.sizeLimit": 10000
        }
    },
    {
        "settingId": "notebook.breadcrumbs.showCodeCells",
        "desc": " When enabled, notebook breadcrumbs contain code cells.",
        "setting": {
            "notebook.breadcrumbs.showCodeCells": true
        }
    },
    {
        "settingId": "notebook.cellFailureDiagnostics",
        "desc": " Show available diagnostics for cell failures.",
        "setting": {
            "notebook.cellFailureDiagnostics": true
        }
    },
    {
        "settingId": "notebook.cellFocusIndicator",
        "desc": " Controls where the focus indicator is rendered, either along the cell borders or on the left gutter.",
        "setting": {
            "notebook.cellFocusIndicator": "gutter"
        }
    },
    {
        "settingId": "notebook.cellToolbarLocation",
        "desc": " Where the cell toolbar should be shown, or whether it should be hidden.",
        "setting": {
            "notebook.cellToolbarLocation": {
                "default": "right"
            }
        }
    },
    {
        "settingId": "notebook.cellToolbarVisibility",
        "desc": " Whether the cell toolbar should appear on hover or click.",
        "setting": {
            "notebook.cellToolbarVisibility": "click"
        }
    },
    {
        "settingId": "notebook.codeActionsOnSave",
        "desc": " Run a series of Code Actions for a notebook on save.",
        "setting": {
            "notebook.codeActionsOnSave": {}
        }
    },
    {
        "settingId": "notebook.compactView",
        "desc": " Control whether the notebook editor should be rendered in a compact form. For example, when turned on, it will decrease the left margin width.",
        "setting": {
            "notebook.compactView": true
        }
    },
    {
        "settingId": "notebook.confirmDeleteRunningCell",
        "desc": " Control whether a confirmation prompt is required to delete a running cell.",
        "setting": {
            "notebook.confirmDeleteRunningCell": true
        }
    },
    {
        "settingId": "notebook.consolidatedOutputButton",
        "desc": " Control whether outputs action should be rendered in the output toolbar.",
        "setting": {
            "notebook.consolidatedOutputButton": true
        }
    },
    {
        "settingId": "notebook.consolidatedRunButton",
        "desc": " Control whether extra actions are shown in a dropdown next to the run button.",
        "setting": {
            "notebook.consolidatedRunButton": false
        }
    },
    {
        "settingId": "notebook.diff.enablePreview",
        "desc": " Whether to use the enhanced text diff editor for notebook.",
        "setting": {
            "notebook.diff.enablePreview": true
        }
    },
    {
        "settingId": "notebook.diff.ignoreMetadata",
        "desc": " Hide Metadata Differences",
        "setting": {
            "notebook.diff.ignoreMetadata": false
        }
    },
    {
        "settingId": "notebook.diff.ignoreOutputs",
        "desc": " Hide Outputs Differences",
        "setting": {
            "notebook.diff.ignoreOutputs": false
        }
    },
    {
        "settingId": "notebook.diff.overviewRuler",
        "desc": " Whether to render the overview ruler in the diff editor for notebook.",
        "setting": {
            "notebook.diff.overviewRuler": false
        }
    },
    {
        "settingId": "notebook.displayOrder",
        "desc": " Priority list for output mime types",
        "setting": {
            "notebook.displayOrder": []
        }
    },
    {
        "settingId": "notebook.dragAndDropEnabled",
        "desc": " Control whether the notebook editor should allow moving cells through drag and drop.",
        "setting": {
            "notebook.dragAndDropEnabled": true
        }
    },
    {
        "settingId": "notebook.editorOptionsCustomizations",
        "desc": " Settings for code editors used in notebooks. This can be used to customize most editor.* settings.",
        "setting": {
            "notebook.editorOptionsCustomizations": {}
        }
    },
    {
        "settingId": "notebook.find.scope",
        "desc": " Customize the Find Widget behavior for searching within notebook cells. When both markup source and markup preview are enabled, the Find Widget will search either the source code or preview based on the current state of the cell.",
        "setting": {
            "notebook.find.scope": {
                "markupSource": true,
                "markupPreview": true,
                "codeSource": true,
                "codeOutput": true
            }
        }
    },
    {
        "settingId": "notebook.formatOnCellExecution",
        "desc": " Format a notebook cell upon execution. A formatter must be available.",
        "setting": {
            "notebook.formatOnCellExecution": false
        }
    },
    {
        "settingId": "notebook.formatOnSave.enabled",
        "desc": " Format a notebook on save. A formatter must be available, `files.autoSave` must not be set to `afterDelay`, and the editor must not be shutting down when formatting.",
        "setting": {
            "notebook.formatOnSave.enabled": false
        }
    },
    {
        "settingId": "notebook.globalToolbar",
        "desc": " Control whether to render a global toolbar inside the notebook editor.",
        "setting": {
            "notebook.globalToolbar": true
        }
    },
    {
        "settingId": "notebook.globalToolbarShowLabel",
        "desc": " Control whether the actions on the notebook toolbar should render label or not.",
        "setting": {
            "notebook.globalToolbarShowLabel": "always"
        }
    },
    {
        "settingId": "notebook.gotoSymbols.showAllSymbols",
        "desc": " When enabled the Go to Symbol Quick Pick will display full code symbols from the notebook, as well as Markdown headers.",
        "setting": {
            "notebook.gotoSymbols.showAllSymbols": true
        }
    },
    {
        "settingId": "notebook.insertFinalNewline",
        "desc": " When enabled, insert a final new line into the end of code cells when saving a notebook.",
        "setting": {
            "notebook.insertFinalNewline": false
        }
    },
    {
        "settingId": "notebook.insertToolbarLocation",
        "desc": " Control where the insert cell actions should appear.\n  - betweenCells: A toolbar that appears on hover between cells.\n  - notebookToolbar: The toolbar at the top of the notebook editor.\n  - both: Both toolbars.\n  - hidden: The insert actions don't appear anywhere.",
        "setting": {
            "notebook.insertToolbarLocation": "both"
        }
    },
    {
        "settingId": "notebook.lineNumbers",
        "desc": " Controls the display of line numbers in the cell editor.",
        "setting": {
            "notebook.lineNumbers": "off"
        }
    },
    {
        "settingId": "notebook.markup.fontSize",
        "desc": " Controls the font size in pixels of rendered markup in notebooks. When set to `0`, 120% of `editor.fontSize` is used.",
        "setting": {
            "notebook.markup.fontSize": 0
        }
    },
    {
        "settingId": "notebook.navigation.allowNavigateToSurroundingCells",
        "desc": " When enabled cursor can navigate to the next/previous cell when the current cursor in the cell editor is at the first/last line.",
        "setting": {
            "notebook.navigation.allowNavigateToSurroundingCells": true
        }
    },
    {
        "settingId": "notebook.outline.showCodeCells",
        "desc": " When enabled, notebook outline shows code cells.",
        "setting": {
            "notebook.outline.showCodeCells": false
        }
    },
    {
        "settingId": "notebook.outline.showCodeCellSymbols",
        "desc": " When enabled, notebook outline shows code cell symbols.",
        "setting": {
            "notebook.outline.showCodeCellSymbols": true
        }
    },
    {
        "settingId": "notebook.outline.showMarkdownHeadersOnly",
        "desc": " When enabled, notebook outline will show only markdown cells containing a header.",
        "setting": {
            "notebook.outline.showMarkdownHeadersOnly": true
        }
    },
    {
        "settingId": "notebook.output.fontFamily",
        "desc": " The font family of the output text within notebook cells. When set to empty, the `editor.fontFamily` is used.",
        "setting": {
            "notebook.output.fontFamily": ""
        }
    },
    {
        "settingId": "notebook.output.fontSize",
        "desc": " Font size for the output text within notebook cells. When set to 0, `editor.fontSize` is used.",
        "setting": {
            "notebook.output.fontSize": 0
        }
    },
    {
        "settingId": "notebook.output.lineHeight",
        "desc": " Line height of the output text within notebook cells.\n  - When set to 0, editor line height is used.\n  - Values between 0 and 8 will be used as a multiplier with the font size.\n  - Values greater than or equal to 8 will be used as effective values.",
        "setting": {
            "notebook.output.lineHeight": 0
        }
    },
    {
        "settingId": "notebook.output.linkifyFilePaths",
        "desc": " Control whether to disable filepath links in the output of notebook cells.",
        "setting": {
            "notebook.output.linkifyFilePaths": true
        }
    },
    {
        "settingId": "notebook.output.minimalErrorRendering",
        "desc": " Control whether to render error output in a minimal style.",
        "setting": {
            "notebook.output.minimalErrorRendering": false
        }
    },
    {
        "settingId": "notebook.output.scrolling",
        "desc": " Initially render notebook outputs in a scrollable region when longer than the limit.",
        "setting": {
            "notebook.output.scrolling": true
        }
    },
    {
        "settingId": "notebook.output.textLineLimit",
        "desc": " Controls how many lines of text are displayed in a text output.",
        "setting": {
            "notebook.output.textLineLimit": 30
        }
    },
    {
        "settingId": "notebook.output.wordWrap",
        "desc": " Controls whether the lines in output should wrap.",
        "setting": {
            "notebook.output.wordWrap": false
        }
    },
    {
        "settingId": "notebook.scrolling.revealNextCellOnExecute",
        "desc": " How far to scroll when revealing the next cell upon running notebook.cell.executeAndSelectBelow.\n  - fullCell: Scroll to fully reveal the next cell.\n  - firstLine: Scroll to reveal the first line of the next cell.\n  - none: Do not scroll.",
        "setting": {
            "notebook.scrolling.revealNextCellOnExecute": "fullCell"
        }
    },
    {
        "settingId": "notebook.showCellStatusBar",
        "desc": " Whether the cell status bar should be shown.\n  - hidden: The cell Status bar is always hidden.\n  - visible: The cell Status bar is always visible.\n  - visibleAfterExecute: The cell Status bar is hidden until the cell has executed. Then it becomes visible to show the execution status.",
        "setting": {
            "notebook.showCellStatusBar": "visible"
        }
    },
    {
        "settingId": "notebook.showFoldingControls",
        "desc": " Controls when the Markdown header folding arrow is shown.\n  - always: The folding controls are always visible.\n  - never: Never show the folding controls and reduce the gutter size.\n  - mouseover: The folding controls are visible only on mouseover.",
        "setting": {
            "notebook.showFoldingControls": "mouseover"
        }
    },
    {
        "settingId": "notebook.stickyScroll.mode",
        "desc": " Control whether nested sticky lines appear to stack flat or indented.\n  - flat: Nested sticky lines appear flat.\n  - indented: Nested sticky lines appear indented.",
        "setting": {
            "notebook.stickyScroll.mode": "indented"
        }
    },
    {
        "settingId": "notebook.undoRedoPerCell",
        "desc": " Whether to use separate undo/redo stack for each cell.",
        "setting": {
            "notebook.undoRedoPerCell": true
        }
    }
]