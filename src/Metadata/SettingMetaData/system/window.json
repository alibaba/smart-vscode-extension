[
    {
        "settingId": "window.density.editorTabHeight",
        "desc": " Controls the height of editor tabs. Also applies to the title control bar when `workbench.editor.showTabs` is not set to `multiple`.",
        "setting": {
            "window.density.editorTabHeight": "default"
        }
    },
    {
        "settingId": "window.autoDetectColorScheme",
        "desc": " If set, automatically switch to the preferred color theme based on the OS appearance. If the OS appearance is dark, the theme specified at `workbench.preferredDarkColorTheme` is used, for light `workbench.preferredLightColorTheme`.",
        "setting": {
            "window.autoDetectColorScheme": false
        }
    },
    {
        "settingId": "window.autoDetectHighContrast",
        "desc": " If enabled, will automatically change to high contrast theme if the OS is using a high contrast theme. The high contrast theme to use is specified by `workbench.preferredHighContrastColorTheme` and `workbench.preferredHighContrastLightColorTheme`.",
        "setting": {
            "window.autoDetectHighContrast": true
        }
    },
    {
        "settingId": "window.clickThroughInactive",
        "desc": " If enabled, clicking on an inactive window will both activate the window and trigger the element under the mouse if it is clickable. If disabled, clicking anywhere on an inactive window will activate it only and a second click is required on the element.",
        "setting": {
            "window.clickThroughInactive": true
        }
    },
    {
        "settingId": "window.closeWhenEmpty",
        "desc": " Controls whether closing the last editor should also close the window. This setting only applies for windows that do not show folders.",
        "setting": {
            "window.closeWhenEmpty": false
        }
    },
    {
        "settingId": "window.commandCenter",
        "desc": " Show command launcher together with the window title. This setting only has an effect when `window.customTitleBarVisibility` is not set to `never`.",
        "setting": {
            "window.commandCenter": true
        }
    },
    {
        "settingId": "window.confirmBeforeClose",
        "desc": " Controls whether to show a confirmation dialog before closing a window or quitting the application.\n  - always: Always ask for confirmation.\n  - keyboardOnly: Only ask for confirmation if a keybinding was used.\n  - never: Never explicitly ask for confirmation.",
        "setting": {
            "window.confirmBeforeClose": "never"
        }
    },
    {
        "settingId": "window.confirmSaveUntitledWorkspace",
        "desc": " Controls whether a confirmation dialog shows asking to save or discard an opened untitled workspace in the window when switching to another workspace. Disabling the confirmation dialog will always discard the untitled workspace.",
        "setting": {
            "window.confirmSaveUntitledWorkspace": true
        }
    },
    {
        "settingId": "window.customMenuBarAltFocus",
        "desc": " Controls whether the menu bar will be focused by pressing the Alt-key. This setting has no effect on toggling the menu bar with the Alt-key.",
        "setting": {
            "window.customMenuBarAltFocus": true
        }
    },
    {
        "settingId": "window.customTitleBarVisibility",
        "desc": " Adjust when the custom title bar should be shown. The custom title bar can be hidden when in full screen mode with `windowed`. The custom title bar can only be hidden in none full screen mode with `never` when `window.titleBarStyle` is set to `native`.\n  - auto: Automatically changes custom title bar visibility.\n  - windowed: Hide custom titlebar in full screen. When not in full screen, automatically change custom title bar visibility.\n  - never: Hide custom titlebar when `window.titleBarStyle` is set to `native`.",
        "setting": {
            "window.customTitleBarVisibility": "auto"
        }
    },
    {
        "settingId": "window.dialogStyle",
        "desc": " Adjust the appearance of dialog windows.",
        "setting": {
            "window.dialogStyle": "native"
        }
    },
    {
        "settingId": "window.doubleClickIconToClose",
        "desc": " If enabled, this setting will close the window when the application icon in the title bar is double-clicked. The window will not be able to be dragged by the icon. This setting is effective only if `window.titleBarStyle` is set to `custom`.",
        "setting": {
            "window.doubleClickIconToClose": false
        }
    },
    {
        "settingId": "window.nativeFullScreen",
        "desc": " Controls if native full-screen should be used on macOS. Disable this option to prevent macOS from creating a new space when going full-screen.",
        "setting": {
            "window.nativeFullScreen": true
        }
    },
    {
        "settingId": "window.nativeTabs",
        "desc": " Enables macOS Sierra window tabs. Note that changes require a full restart to apply and that native tabs will disable a custom title bar style if configured.",
        "setting": {
            "window.nativeTabs": false
        }
    },
    {
        "settingId": "window.enableMenuBarMnemonics",
        "desc": " Controls whether the main menus can be opened via Alt-key shortcuts. Disabling mnemonics allows to bind these Alt-key shortcuts to editor commands instead.",
        "setting": {
            "window.enableMenuBarMnemonics": true
        }
    },
    {
        "settingId": "window.menuBarVisibility",
        "desc": " Control the visibility of the menu bar. A setting of 'toggle' means that the menu bar is hidden and a single press of the Alt key will show it. A setting of 'compact' will move the menu into the side bar.\n  - classic: Menu is displayed at the top of the window and only hidden in full screen mode.\n  - visible: Menu is always visible at the top of the window even in full screen mode.\n  - toggle: Menu is hidden but can be displayed at the top of the window via the Alt key.\n  - hidden: Menu is always hidden.\n  - compact: Menu is displayed as a compact button in the side bar. This value is ignored when `window.titleBarStyle` is `native`.",
        "setting": {
            "window.menuBarVisibility": "classic"
        }
    },
    {
        "settingId": "window.newWindowDimensions",
        "desc": " Controls the dimensions of opening a new window when at least one window is already opened. Note that this setting does not have an impact on the first window that is opened. The first window will always restore the size and location as you left it before closing.\n  - default: Open new windows in the center of the screen.\n  - inherit: Open new windows with same dimension as last active one.\n  - offset: Open new windows with same dimension as last active one with an offset position.\n  - maximized: Open new windows maximized.\n  - fullscreen: Open new windows in full screen mode.",
        "setting": {
            "window.newWindowDimensions": "default"
        }
    },
    {
        "settingId": "window.openFilesInNewWindow",
        "desc": " Controls whether files should open in a new window when using a command line or file dialog.\n Note that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).\n  - on: Files will open in a new window.\n  - off: Files will open in the window with the files' folder open or the last active window.\n  - default: Files will open in a new window unless picked from within the application (e.g. via the File menu).",
        "setting": {
            "window.openFilesInNewWindow": "off"
        }
    },
    {
        "settingId": "window.openFoldersInNewWindow",
        "desc": " Controls whether folders should open in a new window or replace the last active window.\n Note that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).\n  - on: Folders will open in a new window.\n  - off: Folders will replace the last active window.\n  - default: Folders will open in a new window unless a folder is picked from within the application (e.g. via the File menu).",
        "setting": {
            "window.openFoldersInNewWindow": "default"
        }
    },
    {
        "settingId": "window.openWithoutArgumentsInNewWindow",
        "desc": " Controls whether a new empty window should open when starting a second instance without arguments or if the last running instance should get focus.\n Note that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).\n  - on: Open a new empty window.\n  - off: Focus the last active running instance.",
        "setting": {
            "window.openWithoutArgumentsInNewWindow": "on"
        }
    },
    {
        "settingId": "window.restoreFullscreen",
        "desc": " Controls whether a window should restore to full screen mode if it was exited in full screen mode.",
        "setting": {
            "window.restoreFullscreen": false
        }
    },
    {
        "settingId": "window.restoreWindows",
        "desc": " Controls how windows are being reopened after starting for the first time. This setting has no effect when the application is already running.\n  - preserve: Always reopen all windows. If a folder or workspace is opened (e.g. from the command line) it opens as a new window unless it was opened before. If files are opened they will open in one of the restored windows.\n  - all: Reopen all windows unless a folder, workspace or file is opened (e.g. from the command line).\n  - folders: Reopen all windows that had folders or workspaces opened unless a folder, workspace or file is opened (e.g. from the command line).\n  - one: Reopen the last active window unless a folder, workspace or file is opened (e.g. from the command line).\n  - none: Never reopen a window. Unless a folder or workspace is opened (e.g. from the command line), an empty window will appear.",
        "setting": {
            "window.restoreWindows": "all"
        }
    },
    {
        "settingId": "window.title",
        "desc": " Controls the window title based on the current context such as the opened workspace or active editor.",
        "setting": {
            "window.title": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${profileName}${separator}${appName}"
        }
    },
    {
        "settingId": "window.titleBarStyle",
        "desc": " Adjust the appearance of the window title bar to be native by the OS or custom. On Linux and Windows, this setting also affects the application and context menu appearances. Changes require a full restart to apply.",
        "setting": {
            "window.titleBarStyle": "custom"
        }
    },
    {
        "settingId": "window.titleSeparator",
        "desc": " Separator used by `window.title`.",
        "setting": {
            "window.titleSeparator": " - "
        }
    },
    {
        "settingId": "window.zoomLevel",
        "desc": " Adjust the default zoom level for all windows. Each increment above `0` (e.g. `1`) or below (e.g. `-1`) represents zooming `20%` larger or smaller. You can also enter decimals to adjust the zoom level with a finer granularity. See `window.zoomPerWindow` for configuring if the 'Zoom In' and 'Zoom Out' commands apply the zoom level to all windows or only the active window.",
        "setting": {
            "window.zoomLevel": 0
        }
    },
    {
        "settingId": "window.zoomPerWindow",
        "desc": " Controls if the 'Zoom In' and 'Zoom Out' commands apply the zoom level to all windows or only the active window. See `window.zoomLevel` for configuring a default zoom level for all windows.",
        "setting": {
            "window.zoomPerWindow": true
        }
    },
    {
        "settingId": "window.systemColorTheme",
        "desc": " The system color theme applies to native UI elements such as native dialogs, menus and title bar.\n  - default: System color theme matches the configured OS theme.\n  - auto: Enforce a light system color theme when a light workbench color theme is configured and the same for configured dark workbench color themes.\n  - light: Enforce a light system color theme.\n  - dark: Enforce a dark system color theme.",
        "setting": {
            "window.systemColorTheme": "default"
        }
    }
]